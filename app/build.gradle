apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'


android {
    compileSdkVersion 27
    buildToolsVersion "27.0.1"
    defaultConfig {
        applicationId "com.rbueno.desafioandroid"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [fabricKey: "16c43aaf1d448e33c75ce8104ee8806a7210f08a"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

ext {
    requestMatcherVersion = "2.1.0"
    okhttpVersion = "3.6.0"
    junitVersion = "4.12"
    hamcrestVersion = "1.3"
    espressoVersion = "2.2.2"
    testRulesVersion = "0.5"
    testRunnerVersion = "0.5"
    supportVersion = "27.0.2"
    mirrorVersion = "1.6.1"
    testButlerVersion = "1.3.0"
    retrofitVersion = "2.2.0"
    eventbusVersion = "3.0.0"
    crashliticsVersion = "2.8.0@aar"
    kappucinoVersion = "1.1.0"
    daggerVersion = "2.12"
}

dependencies {
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:appcompat-v7:$supportVersion"

    implementation "android.arch.lifecycle:runtime:1.0.3"
    implementation "android.arch.lifecycle:extensions:1.0.0"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    api("com.crashlytics.sdk.android:crashlytics:$crashliticsVersion") {
        transitive = true;
    }

    //unit test dependencies
    testImplementation "br.com.concretesolutions:requestmatcher:$requestMatcherVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    //instrumented testes dependencies
    androidTestImplementation "br.com.concretesolutions:requestmatcher:$requestMatcherVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    androidTestImplementation "com.android.support.test:rules:$testRulesVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support:support-annotations:$supportVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion")
    androidTestImplementation "br.com.concretesolutions:kappuccino:$kappucinoVersion"
}

